name: "sn_siamese_bigger"

layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/media/gavin/1c4675c9-b013-459a-a341-4d7675b098ca/siamese_bigger_staging/train"
    batch_size: 32
  }
}
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/media/gavin/e2bcddc2-a2ea-4321-839e-29b2db8373dc/siamese_bigger_staging/test"
    batch_size: 50
  }
}
layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_ft"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1_ft"
  param {
    name: "ip1_w_ft"
    lr_mult: 10
  }
  param {
    name: "ip1_b_ft"
    lr_mult: 20
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1_ft"
  top: "ip1_ft"
}
layer {
  name: "ip2_ft"
  type: "InnerProduct"
  bottom: "ip1_ft"
  top: "ip2_ft"
  param {
    name: "ip2_w_ft"
    lr_mult: 10
  }
  param {
    name: "ip2_b_ft"
    lr_mult: 20
  }
  inner_product_param {
    num_output: 22
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_ft"
  type: "InnerProduct"
  bottom: "ip2_ft"
  top: "feat_ft"
  param {
    name: "feat_w_ft"
    lr_mult: 10
  }
  param {
    name: "feat_b_ft"
    lr_mult: 20
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_p"
  type: "Convolution"
  bottom: "data_p"
  top: "conv1_p"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_p"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1_ft_p"
  type: "InnerProduct"
  bottom: "pool2_p"
  top: "ip1_ft_p"
  param {
    name: "ip1_w_ft"
    lr_mult: 10
  }
  param {
    name: "ip1_b_ft"
    lr_mult: 20
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "ip1_ft_p"
  top: "ip1_ft_p"
}
layer {
  name: "ip2_ft_p"
  type: "InnerProduct"
  bottom: "ip1_ft_p"
  top: "ip2_ft_p"
  param {
    name: "ip2_w_ft"
    lr_mult: 10
  }
  param {
    name: "ip2_b_ft"
    lr_mult: 20
  }
  inner_product_param {
    num_output: 22
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat_ft_p"
  type: "InnerProduct"
  bottom: "ip2_p"
  top: "feat_ft_p"
  param {
    name: "feat_w_ft"
    lr_mult: 10
  }
  param {
    name: "feat_b_ft"
    lr_mult: 20
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss_ft"
  type: "ContrastiveLoss"
  bottom: "feat_ft"
  bottom: "feat_ft_p"
  bottom: "sim"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}
